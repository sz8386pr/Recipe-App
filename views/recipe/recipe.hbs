<!-- Owner/saver can access these menu -->
{{#ifCond (equals recipe.author user.username) '||' (equals recipe.saved_by user.username)}}
    <!-- If not published, owner/saver can publish it -->
    {{#if (equals recipe.published false)}}
        <!-- Only the author can modify when the recipe is unpublished. Saved person can only publish/unpublish/delete the recipe to keep the original recipe -->
        {{#ifCond recipe.author '===' user.username}}
            <a href="/recipe/modify/{{recipe.title}}"><button id="modify-button" onclick="return confirm('Do you want to modify this recipe?')">Modify</button></a>
        {{/ifCond}}

        <p>This recipe is not published yet.</p>
        <form id='publish' action="/recipe/publish/{{recipe.title}}" method="POST">
            <input id='publish-button' type="submit" value="Publish recipe"  onclick="return confirm('Are you sure you want to publish this recipe?')">
        </form>

    <!-- if published, owner/saver can unpublish it or delete it-->
    {{else}}
        <p>This recipe is already published. Unpublish if you want to modify it</p>
        <form id='unpublish' action="/recipe/unpublish/{{recipe.title}}" method="POST">
            <input id='unpublish-button' type="submit" value="Unpublish recipe" onclick="return confirm('Are you sure you want to UNPUBLISH this recipe?')">
        </form>
    {{/if}}

{{/ifCond}}

<!-- Recipe failure messages-->
<ul>{{#each messages}}
    <li>{{this}}</li>
{{/each}}
</ul>
<!-- favorite button -->
<form action="/user/favorite/{{recipe._id}}" method="POST">
    <input type="hidden" name="favorite" id="favorite">
    <input type="submit" id="favorite-button" disabled>
</form>

<!-- Rating button -->
<!-- Slider reference: http://thenewcode.com/757/Playing-With-The-HTML5-range-Slider-Input -->
<form action="/user/rate/{{recipe._id}}" method="POST">
    <input type="range" list="rating-list" min="1" max="5" name="rating" id="rating" value="5" oninput="ratingUpdate(value)">
        <datalist id="rating-list">
            <option value="1" label="1">
            <option value="2" label="2">
            <option value="3" label="3">
            <option value="4" label="4">
            <option value="5" label="5">
        </datalist>
        <output for="rating" id="rating-display">5</output>
    <input type="submit" value="Rate recipe" id="rating-button" onclick="return confirm('Do you want to rate this recipe?')"> <span id="user-rating"></span>
</form>

<!-- print area reference from: https://stackoverflow.com/questions/468881/print-div-id-printarea-div-only -->
<button onclick="window.print();">Print this recipe</button>
<!-- Recipe data -->
<div id="recipe-area">
    <span id="print-header"><h3>This recipe is provided by Scott's Recipes</h3></span>
    <p>Favorited: {{recipe.favorite}} times</p>
    <p>Average Rating: <span id="avg-rating">0</span> Rated: <span id="times-rating">0</span> times</p>

    <p>Category: {{recipe.category}}</p>
    <h3>{{recipe.title}}</h3>
    by
    <!-- if source is not local, in another words, from external sources, display sources -->
    {{#if (equals recipe.source "local") }}
        <a href="/user/users/{{recipe.author}}">{{recipe.author}}</a>
    {{else}}
        {{recipe.author}}
        from {{recipe.source}}
        <p>Saved by <a href="/user/users/{{recipe.saved_by}}">{{recipe.saved_by}}</a></p>
    {{/if}}

    <p>Description: {{recipe.description}}</p>
    <p>Cooking Time: {{recipe.duration}}</p>
    <p>Servings: {{recipe.serving}}</p>

    Ingredients:
    <ul>
        {{#each recipe.ingredients}}
            <li>{{this}}</li>
        {{/each}}
    </ul>

    Directions:
    <ol>
        {{#each recipe.directions}}
            <li>{{this}}</li>
        {{/each}}
    </ol>
</div>


<script>
    // set & calculate rating values
    let rating = [{{recipe.rating}}];
    let rating_length = rating.length;
    let total_rating = 0;
    rating.forEach(function(r) { total_rating += r});
    let avg_rating = total_rating / rating_length;
    console.log(rating, rating_length, total_rating, avg_rating);  //debug

    // if avg_rating has a value, display, otherwise, leave it as a default value of 0
    if (avg_rating) {
        document.getElementById('avg-rating').innerText = avg_rating.toFixed(1);
        document.getElementById('times-rating').innerText = rating_length
    }

    // for updating rating slider value display
    function ratingUpdate(rating) {
        document.getElementById('rating-display').value = rating;
    }

    // If user already have favorited this recipe, direct to unfavorite button, else if user hasn't favorited it, direct to favorite button
    let favorites = '{{user.favorite}}';
    let recipe_id = '{{recipe._id}}';
    if (favorites.includes(recipe_id)) {
    	document.getElementById('favorite').value = 'unfavorite';
        document.getElementById('favorite-button').value = 'unfavorite';
        document.getElementById('favorite-button').onclick = function(){return confirm('Do you want to unfavorite this recipe?')};
        document.getElementById('favorite-button').disabled = false;
    }
    else {
        document.getElementById('favorite').value = 'favorite';
        document.getElementById('favorite-button').value = 'favorite';
        document.getElementById('favorite-button').onclick = function(){return confirm('Do you want to favorite this recipe?')};
        document.getElementById('favorite-button').disabled = false;
    }

    // find user rating data
    let user_rating = [];
    {{#each user.rating}}
        user_rating.push({'recipe_id':'{{this.recipe_id}}', 'rating': '{{this.rating}}'});
    {{/each}}

    // Find the previous recipe rating, and if found, display 'You have rated <previous_rating>' Message
    let previous_rating = user_rating.find(function(o){return o["recipe_id"] === recipe_id}).rating;
    console.log(previous_rating);
    if (previous_rating) {
    	document.getElementById('user-rating').innerText = 'You have rated ' + previous_rating;
    }

</script>