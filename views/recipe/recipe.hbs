<!-- Owner/saver can access these menu -->
{{#ifCond (equals recipe.author user.username) '||' (equals recipe.saved_by user.username)}}
    <!-- If not published, owner/saver can publish it -->
    {{#if (equals recipe.published false)}}
        <!-- Only the author can modify when the recipe is unpublished. Saved person can only publish/unpublish/delete the recipe to keep the original recipe -->
        {{#ifCond recipe.author '===' user.username}}
            <a href="/recipe/modify/{{recipe.title}}"><button id="modify-button" onclick="return confirm('Do you want to modify this recipe?')">Modify</button></a>
        {{/ifCond}}

        <p>This recipe is not published yet.</p>
        <form id='publish' action="/recipe/publish/{{recipe.title}}" method="POST">
            <input id='publish-button' type="submit" value="Publish recipe"  onclick="return confirm('Are you sure you want to publish this recipe?')">
        </form>

    <!-- if published, owner/saver can unpublish it or delete it-->
    {{else}}
        <p>This recipe is already published. Unpublish if you want to modify it</p>
        <form id='unpublish' action="/recipe/unpublish/{{recipe.title}}" method="POST">
            <input id='unpublish-button' type="submit" value="Unpublish recipe" onclick="return confirm('Are you sure you want to UNPUBLISH this recipe?')">
        </form>
    {{/if}}

    <!-- delete button -->
    <form id='publish' action="/recipe/delete/{{recipe._id}}" method="POST">
        <input id='delete-button' type="submit" value="Delete recipe" onclick="return confirm('Are you sure you want to DELETE this recipe?')" style="background-color: red; color: orange;">
    </form>



{{/ifCond}}

<!-- Recipe failure messages-->
<ul>{{#each messages}}
    <li>{{this}}</li>
{{/each}}
</ul>
<!-- favorite button -->
<form action="/user/favorite/{{recipe._id}}" method="POST">
    <input type="hidden" name="favorite" id="favorite">
    <input type="submit" id="favorite-button" disabled>
</form>

<!-- Rating button -->
<!-- Slider reference: http://thenewcode.com/757/Playing-With-The-HTML5-range-Slider-Input -->
<form action="/user/rate/{{recipe._id}}" method="POST">
    <input type="range" list="rating-list" min="1" max="5" name="rating" id="rating" value="5" oninput="ratingUpdate(value)">
        <datalist id="rating-list">
            <option value="1" label="1">
            <option value="2" label="2">
            <option value="3" label="3">
            <option value="4" label="4">
            <option value="5" label="5">
        </datalist>
        <output for="rating" id="rating-display">5</output>
    <input type="submit" value="Rate recipe" id="rating-button" onclick="return confirm('Do you want to rate this recipe?')"> <span id="user-rating"></span>
</form>

<!-- print area reference from: https://stackoverflow.com/questions/468881/print-div-id-printarea-div-only -->
<button onclick="window.print();">Print this recipe</button>
<!-- Recipe data -->
<div id="recipe-area">
    <span id="print-header"><h3>This recipe is provided by Scott's Recipes</h3></span>
    <p>Favorited: {{recipe.favorite}} times</p>
    <p>Average Rating: <span id="avg-rating">0</span> Rated: <span id="times-rating">0</span> times</p>

    <p>Category: {{recipe.category}}</p>
    <h3>{{recipe.title}}</h3>
    by
    <!-- if source is not local, in another words, from external sources, display sources -->
    {{#if (equals recipe.source "local") }}
        <a href="/user/users/{{recipe.author}}">{{recipe.author}}</a>
    {{else}}
        {{recipe.author}}
        from {{recipe.source}}
        <p>Saved by <a href="/user/users/{{recipe.saved_by}}">{{recipe.saved_by}}</a></p>
    {{/if}}

    <p>Description: {{recipe.description}}</p>
    <p>Cooking Time: {{recipe.duration}}</p>

    <div id="serving-adjust-div">
        <input type="number" value='{{recipe.serving}}' id="adjust-serving" min="1" max="100" required title="Default serving is {{recipe.serving}}">
        <select id='type' name="type" title="Pick a display type" required>
            <option value="default" selected>Default (cup)</option>
            <option value="metric">Metric (g)</option>
            <option value="imperial">Imperial (oz)</option>
        </select>
        <button id="adjust-serving-button" onclick="get_new_serving()">Adjust serving</button>
    </div>

    <p>Servings: <span id="serving">{{recipe.serving}}</span></p>

    <br>
    <br>
    Ingredients:
    <ul id="ingredients-list">
    </ul>

    Directions:
    <ol>
        {{#each recipe.directions}}
            <li>{{this}}</li>
        {{/each}}
    </ol>
</div>

<button onclick="nutrition_facts()">View nutrition facts</button>
<!-- base reference from https://codepen.io/chriscoyier/pen/egHEK -->
<div id="nutrition-label" hidden>
    <section class="performance-facts">
        <header class="performance-facts__header">
            <h1 class="performance-facts__title">Nutrition Facts</h1>
            <h3>{{recipe.title}}</h3>
            <p>Servings Per Recipe {{recipe.serving}}</p>
        </header>
        <table class="performance-facts__table">
            <thead>
            <tr>
                <th colspan="3" class="small-info">
                    Amount Per Serving
                </th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <th colspan="3">
                    <b>Calories</b>
                    <span id="calories"></span>
                </th>
            </tr>
            <tr class="thick-row">
                <td colspan="3" class="small-info" id="daily-value">
                    <b>% Daily Value*</b>
                </td>
            </tr>
            <tr>
                <th colspan="2">
                    <b>Total Fat</b>
                    <span id="total-fat"></span>
                </th>
                <td>
                    <b><span id="total-fat-percentage"></span></b>
                </td>
            </tr>
            <tr>
                <td class="blank-cell">
                </td>
                <th>
                    Saturated Fat
                    <span id="saturated-fat"></span>
                </th>
                <td>
                    <b><span id="saturated-fat-percentage"></span></b>
                </td>
            </tr>
            <tr>
                <th colspan="2">
                    <b>Cholesterol</b>
                    <span id="cholesterol"></span>
                </th>
                <td>
                    <b><span id="cholesterol-percentage"></span></b>
                </td>
            </tr>
            <tr>
                <th colspan="2">
                    <b>Sodium</b>
                    <span id="sodium"></span>
                </th>
                <td>
                    <b><span id="sodium-percentage"></span></b>
                </td>
            </tr>
            <tr>
                <th colspan="2">
                    <b>Total Carbohydrate</b>
                    <span id="carb"></span>
                </th>
                <td>
                    <b><span id="carb-percentage"></span></b>
                </td>
            </tr>
            <tr>
                <td class="blank-cell">
                </td>
                <th>
                    Dietary Fiber
                    <span id="fiber"></span>
                </th>
                <td>
                    <b><span id="fiber-percentage"></span></b>
                </td>
            </tr>
            <tr>
                <td class="blank-cell">
                </td>
                <th>
                    Sugars
                    <span id="sugar"></span>
                </th>
                <td>
                </td>
            </tr>
            <tr class="thick-end">
                <th colspan="2">
                    <b>Protein</b>
                    <span id="protein"></span>
                </th>
                <td>
                </td>
            </tr>
            </tbody>
        </table>
        <p class="small-info">* Percent Daily Values are based on a 2,000 calorie diet. Your daily values may be higher or lower depending on your calorie needs:</p>
    </section>
</div>

<div id="comments-div" style="padding-top: 20px">
    <H3>Comments</H3>
    {{#if recipe.comments}}
        <table>
            {{#each recipe.comments}}
                <tr>
                    <td>{{this.username}}</td>
                    <td>{{this.comment}}</td>
                </tr>
            {{/each}}
        </table>
    {{else}}
        <p>There are no comments for this recipe yet. Leave the first comment for this recipe!</p>
    {{/if}}

    <div id="comment-form-div" style="padding-top: 10px">
        <form action="/recipe/recipes/{{recipe.title}}/comment/" method="POST" id="comment-form">
            <input type="hidden" name="comment_username" value="{{user.username}}">
            <textarea name='comment' minlength="1" maxlength="500" placeholder="Share a comment for this recipe" required style="max-width: 100%;" cols="50" rows="10" style="max-width: 100%"  form="comment-form"></textarea>
            <input type="submit" value="Post Comment">
        </form>
    </div>
</div>

<script>
    /********************* rating ********************************************/
    // set & calculate rating values
    let rating = [{{recipe.rating}}];
    let rating_length = rating.length;
    let total_rating = 0;
    rating.forEach(function(r) { total_rating += r});
    let avg_rating = total_rating / rating_length;
    console.log(rating, rating_length, total_rating, avg_rating);  //debug

    // if avg_rating has a value, display, otherwise, leave it as a default value of 0
    if (avg_rating) {
        document.getElementById('avg-rating').innerText = avg_rating.toFixed(1);
        document.getElementById('times-rating').innerText = rating_length
    }

    // for updating rating slider value display
    function ratingUpdate(rating) {
        document.getElementById('rating-display').value = rating;
    }

    // find user rating data
    let user_rating = [];
        {{#each user.rating}}
        user_rating.push({'recipe_id':'{{this.recipe_id}}', 'rating': '{{this.rating}}'});
        {{/each}}

    let recipe_id = '{{recipe._id}}';
    // Find the previous recipe rating, and if found, display 'You have rated <previous_rating>' Message
    let previous_rating = user_rating.find(function(o){return o["recipe_id"] === recipe_id});
    // console.log(previous_rating); // debug
    if (previous_rating) {
        document.getElementById('user-rating').innerText = 'You have rated ' + previous_rating.rating;
    }

    /********************* favorites ********************************************/

    // If user already have favorited this recipe, direct to unfavorite button, else if user hasn't favorited it, direct to favorite button
    let favorites = '{{user.favorite}}';

    if (favorites.includes(recipe_id)) {
    	document.getElementById('favorite').value = 'unfavorite';
        document.getElementById('favorite-button').value = 'unfavorite';
        document.getElementById('favorite-button').onclick = function(){return confirm('Do you want to unfavorite this recipe?')};
        document.getElementById('favorite-button').disabled = false;
    }
    else {
        document.getElementById('favorite').value = 'favorite';
        document.getElementById('favorite-button').value = 'favorite';
        document.getElementById('favorite-button').onclick = function(){return confirm('Do you want to favorite this recipe?')};
        document.getElementById('favorite-button').disabled = false;
    }


    /********************* Nutrition facts label ********************************************/

    // Nutrition facts calculation
    // daily suggested value for 2000 calorie diet
    let daily_total_fat = 65;
    let daily_saturated_fat = 25;
    let daily_cholesterol = 300;
    let daily_sodium = 2400;
    let daily_carb = 300;
    let daily_fiber = 25;

    // recipe per serving
    let calories = {{nf.calories}} / {{recipe.serving}};
    let total_fat = {{nf.total_fat}} / {{recipe.serving}};
    let saturated_fat = {{nf.saturated_fat}} / {{recipe.serving}};
    let cholesterol = {{nf.cholesterol}} / {{recipe.serving}};
    let sodium = {{nf.sodium}} / {{recipe.serving}};
    let carb = {{nf.carb}} / {{recipe.serving}};
    let fiber = {{nf.fiber}} / {{recipe.serving}};
    let sugar = {{nf.sugar}} / {{recipe.serving}};
    let protein = {{nf.protein}} / {{recipe.serving}};

    // daily percentages
    let total_fat_percentage = total_fat / daily_total_fat * 100;
    let saturated_fat_percentage = saturated_fat / daily_saturated_fat * 100;
    let cholesterol_percentage = cholesterol / daily_cholesterol * 100;
    let sodium_percentage = sodium / daily_sodium * 100;
    let carb_percentage = carb / daily_carb * 100;
    let fiber_percentage = fiber / daily_fiber * 100;

    // span objects
    document.getElementById('calories').innerHTML = calories.toFixed(1);
    document.getElementById('total-fat').innerHTML = total_fat.toFixed(1) + " g";
    document.getElementById('total-fat-percentage').innerHTML = total_fat_percentage.toFixed(0) + " %";
    document.getElementById('saturated-fat').innerHTML = saturated_fat.toFixed(1) + " g";
    document.getElementById('saturated-fat-percentage').innerHTML = saturated_fat_percentage.toFixed(0) + " %";
    document.getElementById('cholesterol').innerHTML = cholesterol.toFixed(1) + " mg";
    document.getElementById('cholesterol-percentage').innerHTML = cholesterol_percentage.toFixed(0) + " %";
    document.getElementById('sodium').innerHTML = sodium.toFixed(1) + " mg";
    document.getElementById('sodium-percentage').innerHTML = sodium_percentage.toFixed(0) + " %";
    document.getElementById('carb').innerHTML = carb.toFixed(1) + " g";
    document.getElementById('carb-percentage').innerHTML = carb_percentage.toFixed(0) + " %";
    document.getElementById('fiber').innerHTML = fiber.toFixed(1) + " g";
    document.getElementById('fiber-percentage').innerHTML = fiber_percentage.toFixed(0) + " %";
    document.getElementById('sugar').innerHTML = sugar.toFixed(1) + " g";
    document.getElementById('protein').innerHTML = protein.toFixed(1) + " g";

    // nutrition facts label on/off
    function nutrition_facts() {
    	let label = document.getElementById('nutrition-label');
    	if (label.hidden === true) {
            label.hidden = false
        }
        else {
            label.hidden = true
        }
    }


    /********************* Ingredients ********************************************/

    // make a list of dictionary objects
    let ingredients = [];
    {{#each alt_ingredients}}
        ingredients.push({ 'quantity':'{{this.qty}}', 'unit': '{{this.unit}}', 'weight': '{{this.weight}}', 'name': '{{this.name}}' });
    {{/each}}

    // get the new serving and display type value and call display_ingredients() passing those values
    function get_new_serving() {
        let new_serving = document.getElementById('adjust-serving').value;
        document.getElementById('serving').innerText = new_serving;
        let type_value = document.getElementById('type').value;
        return display_ingredients(new_serving / {{recipe.serving}}, type_value );
    }

    // display ingredients
    function display_ingredients(ingredients_ratio, type) {
        document.getElementById('ingredients-list').innerHTML = ""; // clear ingredients list
        // for the length of ingredients list, create <li>
    	ingredients.forEach(function (i) {
            let ingredient_row = document.createElement('li');
            // and depends on the type of display selected, display accordingly
            if (type === 'default') {
                ingredient_row.innerHTML = (i.quantity * ingredients_ratio).toFixed(1) + ' ' + i.unit + ' ' + i.name;
            }
            else if (type === 'metric'){
                ingredient_row.innerHTML = (i.weight * ingredients_ratio).toFixed(1) + ' g ' + i.name;  // weight in grams
            }
            else if (type === 'imperial'){
                ingredient_row.innerHTML = (i.weight * ingredients_ratio / 28.3495).toFixed(1) + ' oz ' + i.name;   // weight in grams calculated to oz
            }
            // and append the row to the ingredients-list UL parent node
            document.getElementById('ingredients-list').appendChild(ingredient_row.cloneNode(true));
        });
    }

    // display the default/initial ingredients list
    display_ingredients(1, 'default');

</script>
<!--  for nutrition facts display -->
<link rel="stylesheet" href="/stylesheets/nutrition_facts.css" type="text/css">
